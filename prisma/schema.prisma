generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  email        String    @unique
  password     String
  role         Role      @default(user)
  location     String
  birthDate    DateTime
  gender       Gender    @default(unspecified)
  bio          String
  avatar       String    @default("sample.jpg")
  joinedMeets  Meet[]    @relation("MeetAttendance")
  createdMeets Meet[]    @relation("UserMeets")
  savedMeets   Meet[]    @relation("SavedMeets")
  friends      User[]    @relation("UserFriends")
  friendOf     User[]    @relation("UserFriends")
  comments     Comment[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum Role {
  admin
  user
  guest
}

enum Gender {
  male
  female
  unspecified
}

model Meet {
  id          String    @id @default(cuid())
  title       String
  description String
  sport       Sport     @default(exercise)
  date        DateTime
  location    String
  creator     User      @relation("UserMeets", fields: [creatorId], references: [id])
  creatorId   String
  image       String    @default("default.jpg")
  attendees   User[]    @relation("MeetAttendance")
  savedBy     User[]    @relation("SavedMeets")
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  Meet      Meet     @relation(fields: [meetId], references: [id])
  meetId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Sport {
  football
  basketball
  volleyball
  tennis
  rugby
  karate
  yoga
  running
  exercise
}
